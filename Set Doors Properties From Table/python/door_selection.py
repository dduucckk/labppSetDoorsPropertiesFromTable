# -*- coding: utf-8 -*-
"""
 door_selection.py
 идея - вызывать этот скрипт из setDoorPropertiesFromTable.cpp
 получая словарь csv, где на каждую характеристику двери есть список
 из наименований (ОВ ДУ СС ЭОМ ПУИ тамбур квартира)
 и категорий помещений (Жилая нежилая технические МОП)
 и таблицу cpp из GUID дверей (номер) и помещений и категорий,
 здесь мы получаем словарь ключей в виде уникальных списков характеристик дверей
 со значениями в виде списков GUID дверей.
 Возвращая это таблицей мы можем определить количество типов для проекта
 и исходя из таблицы пронумеровать типы скриптом setDoorPropertiesFromTable.cpp?
 вернув в него таблицу из GUID дверей и их категориями дверей.

 1 {"EIS 30":[["ОВ","ВК"],["Технические"]],"EIS 90":[["ЭОМ","СС"],["Технические"]]...}
 2 {"Herman":[["Лифтовый"],["Жилые","Технические"]]...}
 +
 3 {"8CCC10E2-D6C4-4872-8F18-8BA1A34F11D9":[["Лифтовый Холл","Помещение ЭОМ-СС/прим"],["Технические помещения"]]...}
 =
 (for in) --> if nam(1/2) in name(3) and cat(1/2) in category(3):

 {["EIS 30", "Herman"]:["8CCC10E2-D6C4-4872-8F18-8BA1A34F11D9"...]...}
"""

import csv
import sys
import os

filechar = '../src/Типология.csv'
filedoor = sys.argv[1]

def Чтение_файла(filename):
    with open(filename, newline='\n') as csvfile:
        reader = csv.reader(csvfile, delimiter=';', quotechar="|")
        return reader

def

def соотнесение(характеристики, двери):
    вседвери = {}
    for d in двери:
        текущаядверьвход = []
        текущаядверьвыход = []
        текущаядверь = []
        # итиерируем все характеристики
        # (фиксировано, но колибруется по 1 столбцу)
        # исключая первые два столбца с зонами:
        for хар_позиция in range(len(характеристики[0])-2):
          хар_позиция = хар_позиция + 2
          # поочерёдно входные и выходные зоны дверей:
          for i in [2,4]:
            dCAT,dNAM = d[i-2:i]
            # зоны итерируем характеристик:
            for характеристикадвери in характеристики[1:]:
                if all([dCAT in характеристикадвери[0],
                        dNAM in характеристикадвери[1]]):
                    if i == 2:
                        текущаядверьвход.append(хар[хар_позиция])
                    else:
                        текущаядверьвыход.append(хар[хар_позиция])
          for в,из in zip(текущаядверьвход,текущаядверьвыход):
              pass
              # здесь сравнение характеристики с таблицей приоритетов
              # характеристик, например, скрытая петля заменяет наружную
              # автопорог вытесняет 12 мм
              # прочее, это самая важная часть в важной части
              if в<из:
                  текущаядверь.append(в)
              else:
                  текущаядверь.append(из)
          вседвери[текущаядверь]
    return формировать_таблицу(вседвери)

def формировать_таблицу(вседвери):
    pass

def вывод(путь, вывод):
    # write new csv
    with open(filename, 'w', newline='') as csvfile:
        spamwriter = csv.writer(csvfile, delimiter=';',
                                quotechar='|', quoting=csv.QUOTE_MINIMAL)
        for group in data:
            for line in group:
                spamwriter.writerow(line)
    return

def вывести(путь, вывод):
    дверикатегории = os.path.join(путь,"DoorCats.csv")
    дверихарактеристики = os.path.join(путь,"DoorChars.csv")
    вывод(дверикатегории, вывод[0])
    вывод(дверихарактеристики, вывод[1])

if __name__ == "__main__":
    """
    1. Читать файл характеристик ../src/
    2. Читать файл зон дверей sys.argv[1]
    3. Соотнесение отдельных характеристик
    4. Итерация дверей с подбором характеристик - главная часть
    5. Форматирование таблиц
    6. Вывод двух таблиц
    """
    характеристики = Чтение_файла(filechar)
    двери = Чтение_файла(filedoor)
    вывод = соотнесение(характеристики, двери)
    путь_к_мечте = os.path.pardir(filedoor)
    вывести(путь_к_мечте, вывод)
